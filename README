***************************************************************************
************************ ProtobetterDynamic *******************************
***************************************************************************

"Because code without data is useless..." - Danrae Pray

This library is a fully-featured c++ version of protobetter which expands upon the previous serialization library with the addition of dynamic-typing and reflection capabilities in c++.

This library was designed as the next iteration of protobetter with the goal of providing native c/c++ applications with the ability to dynamically create composite types at runtime and "reflect" on the details of their type information... all while still providing automagic serialization behind the scenes.

While ProtobetterDynamic has a fully-dynamic type system which is made available through a simple c++ API, there is also a (preferred) mechanism for defining these types in JSON objects.  For better integration with our existing capabilities at NASA, an interface has been created for this library which allows c++ applications to load / interpret *.ptype files (containing type definitions) at runtime.  Type definitions are dynamically generated which can be used to read/write structured data as you would expect in any other dynamically typed language.  Moreover, once the types have been interpreted, the type information can be queried at any time during program exection, allowing for better automation tools to be built & more code-reuse during integration/testing.
 
